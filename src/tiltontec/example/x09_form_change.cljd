(ns tiltontec.example.x09-form-change
  (:require
    [tiltontec.matrix.foundation :refer [mx-type PObserver observe]]
    [tiltontec.matrix.base
     :refer [trx wtrx dprn dp dpx  prog1 dprn dp dpx *trx?* *trdeep* def-rmap-props]]
    [tiltontec.cell.base :refer [ unbound *depender*] :as cty]
    [tiltontec.cell.core :as cell
     :refer [cF cFonce cI]]
    [tiltontec.model.core :refer [make mget  cFkids fasc fmuv] :as md]
    [tiltontec.flutter-mx.core :refer [as-dart-callback] :as fx]
    ["package:flutter/widgets.dart"
     :refer [Text State StatefulWidget StatelessWidget] :as w]
    ["package:flutter/material.dart" :as m
     :refer [MainAxisAlignment Colors Theme Icon Icons ThemeData runApp AppBar State]]
    ["package:flutter/painting.dart"
     :refer [TextStyle]]))

(defn make-app []
  (let [title "Text field change detection"]
    (fx/material-app {:title title}
      (fx/scaffold
        {:appBar (fx/app-bar {:title (m/Text title)})}
        (fx/padding
          {:padding  (m.EdgeInsets/all 16.0)}
          (fx/column
            {:mainAxisAlignment MainAxisAlignment/center}
            (fx/text-field
              {:onChanged (as-dart-callback [text]
                            (md/mset! me :value text))}
              {:name  :input-a
               :value (cI nil :watch (fn [prop me newv priorv c]
                                     (dp (str "First text field: " newv))))})
            (fx/text-field {:onChanged (as-dart-callback [text]
                                         (md/mset! me :value text))}
              {:name       :input-b
               :value      (cI "And then...?")
               :controller (cFonce (let [c (m/TextEditingController .text (mget me :value))]
                                     (.addListener c
                                       (fn [] (dp (str "Second text field: " (.-text c)))))
                                     c))})
            (fx/text (str "(a) " (md/fmuval :input-a) " and (b) " (md/fmuval :input-b)))))))))



